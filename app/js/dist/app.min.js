var app = angular.module('App', ['ngRoute', 'ngResource', 'ngCookies'])
.config(function($routeProvider, $locationProvider) {
  $locationProvider.html5Mode(true);
    $routeProvider
        .when('/', {
            templateUrl: 'app/views/home.html',
            controller: 'HomeCtrl',
        })
        .when('/search', {
            templateUrl: 'app/views/search.html',
            controller: 'SearchCtrl',
        })
        .when('/dish/:dishId', {
            templateUrl: 'app/views/dishes.html',
            controller: 'DishesCtrl',
        })
        .otherwise({
            redirectTo: '/',
        });
  }
})
.run(function($rootScope) {

});

app.controller('DinnerCtrl', ['$scope', 'Dinner',
  function($scope,Dinner) {
    $scope.dinner = Dinner;
    $scope.numberOfGuests = Dinner.getNumberOfGuests();

    $scope.setNumberOfGuest = function(number){
        Dinner.setNumberOfGuests(number);
    }

    $scope.getNumberOfGuests = function() {
        return Dinner.getNumberOfGuests();
    }
  }
]);

app.controller('DishesCtrl', ['$scope', '$routeParams', 'Dinner',
  function($scope, $routeParams, Dinner) {

    const id = $routeParams.dishId;
    Dinner.Dish.get({id}).$promise
        .then(function(data) {
          console.log(data);
            $scope.data = data;
        })
        .catch(function(err) {
            $scope.status = "There was an error";
        });
    $scope.back = function() {
      window.history.back();
    }

    $scope.addDish = function(data) {
      Dinner.addToMenu(data);
      window.history.back();
    }
  }
]);

app.controller('HomeCtrl', ['$scope',
  function($scope) {

  }
]);

app.controller('SearchCtrl', ['$scope', '$routeParams', 'Dinner',
  function($scope, $routeParams, Dinner) {

    $scope.options = [
      {
        name: 'Appetizer',
        value: 'appetizer'
      },
      {
        name: 'Main Course',
        value: 'main course'
      },
      {
        name: 'Dessert',
        value: 'dessert'
      }
    ];

    $scope.selectedOption = $scope.options[0];

    $scope.search = function(query,type) {
      console.log(query);
      console.log(type);
        $scope.status = "Searching...";
        Dinner.DishSearch.get({query:query, type:type}).$promise
            .then(function(resp) {
                const data = resp.toJSON();
                const results = data.results;
                const length = results.length;

                $scope.dishes = results;
                $scope.status = "Showing " + length + " results";
            })
            .catch(function(err) {
                $scope.status = "There was an error";
            });
      }
  }

]);

(function() {
    'use strict';

    angular
        .module('App')
        .factory('Dinner', Dinner);

        function Dinner($resource, $cookies) {
            let numberOfGuests = 2;
            let YOLO = 1;
            const menu = []; // type -> dish

            // Monkey patch
            function getType(dishTypes) {
                if(dishTypes.includes('appetizer')) {
                    return 'appetizer';
                } else if (dishTypes.includes('dessert')) {
                    return 'dessert';
                } else {
                    return 'main course';
                }
            }

            this.setNumberOfGuests = function(num) {
                numberOfGuests = num;
            }

            this.getNumberOfGuests = function() {
                return numberOfGuests;
            }

            this.DishSearch = $resource('https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/search',{},{
                get: {
                    headers: {
                        'X-Mashape-Key': 'Qu9grxVNWpmshA4Kl9pTwyiJxVGUp1lKzrZjsnghQMkFkfA4LB'
                    },
                },
            });

            this.Dish = $resource('https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/:id/information',{},{
                get: {
                    headers: {
                        'X-Mashape-Key': 'Qu9grxVNWpmshA4Kl9pTwyiJxVGUp1lKzrZjsnghQMkFkfA4LB'
                    },
                    transformResponse: function(resp, headersGetter, status) {
                      let total = 0;
                      const data = JSON.parse(resp);
                      const ingredients = data.extendedIngredients.map(function (ingredient) {
                        const cost = ingredient.amount * YOLO;
                        total = total + cost;
                        return Object.assign(ingredient, {cost})
                      })
                      return Object.assign(data, {
                        type: getType(data.dishTypes),
                        extendedIngredients: {
                          total,
                          ingredients,
                        },
                      });
                    },
                },
            });

            this.addToMenu = function(dish) {
                menu[dish.type] = dish;
            }

            this.deleteFromMenu = function(dish) {
                delete menu[dish.type];
            }

            this.getMenu = function() {
                return menu;
            }

            return this;
        }
})();

//# sourceMappingURL=app.min.js.map
