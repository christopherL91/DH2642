{"version":3,"sources":["app.module.js","controllers/dinner.js","controllers/dishes.js","controllers/home.js","controllers/search.js","services/dinner.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["\nvar app = angular.module('app', [ 'ngRoute', 'ngTouch', 'ngResource', 'ngCookies', 'ngAnimate', 'ui.bootstrap'])\n  .config(function($routeProvider, $locationProvider) {\n    $locationProvider.html5Mode(true);\n  })\n  .run(function($rootScope) {\n\n  });\n\n});\n","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('DinnerCtrl', DinnerCtrl);\n\n        function DinnerCtrl($scope, Dinner) {\n            $scope.dinner = Dinner;\n            $scope.numberOfGuests = Dinner.getNumberOfGuests();\n\n            $scope.setNumberOfGuest = function(number){\n                Dinner.setNumberOfGuests(number);\n            }\n\n            $scope.getNumberOfGuests = function() {\n                return Dinner.getNumberOfGuests();\n            }\n\n            $scope.$watch('dinner.getMenu()', function(newval,oldval,scope) {\n              console.log({newval, oldval});\n              $scope.menu = newval;\n            });\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('DishesCtrl', DishesCtrl);\n\n        function DishesCtrl($scope, $routeParams, Dinner) {\n            const id = $routeParams.dishId;\n            Dinner.Dish.get({id}).$promise\n                .then(function(data) {\n                  console.log(data);\n                    $scope.data = data;\n                })\n                .catch(function(err) {\n                    $scope.status = \"There was an error\";\n                });\n            $scope.back = function() {\n              window.history.back();\n            }\n\n            $scope.addDish = function(data) {\n              Dinner.addToMenu(data);\n              window.history.back();\n            }\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('HomeCtrl', HomeCtrl);\n\n        function HomeCtrl($scope) {}\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .controller('SearchCtrl', SearchCtrl);\n\n        function SearchCtrl($scope, Dinner) {\n          $scope.options = [\n            {\n              name: 'Appetizer',\n              value: 'appetizer'\n            },\n            {\n              name: 'Main Course',\n              value: 'main course'\n            },\n            {\n              name: 'Dessert',\n              value: 'dessert'\n            }\n          ];\n\n          $scope.selectedOption = $scope.options[0];\n\n          $scope.search = function(query,type) {\n            console.log(query);\n            console.log(type);\n              $scope.status = \"Searching...\";\n              Dinner.DishSearch.get({query:query, type:type}).$promise\n                  .then(function(resp) {\n                      const data = resp.toJSON();\n                      const results = data.results;\n                      const length = results.length;\n\n                      $scope.dishes = results;\n                      $scope.status = \"Showing \" + length + \" results\";\n                  })\n                  .catch(function(err) {\n                      $scope.status = \"There was an error\";\n                  });\n            }\n        }\n})();\n","(function() {\n    'use strict';\n\n    angular\n        .module('app')\n        .factory('Dinner', Dinner);\n\n        function Dinner($resource, $cookies) {\n            let numberOfGuests = 2;\n            let YOLO = 1;\n            const menu = []; // type -> dish\n\n            // Monkey patch\n            function getType(dishTypes) {\n                if(dishTypes.includes('appetizer')) {\n                    return 'appetizer';\n                } else if (dishTypes.includes('dessert')) {\n                    return 'dessert';\n                } else {\n                    return 'main course';\n                }\n            }\n\n            this.setNumberOfGuests = function(num) {\n                numberOfGuests = num;\n            }\n\n            this.getNumberOfGuests = function() {\n                return numberOfGuests;\n            }\n\n            this.DishSearch = $resource('https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/search',{},{\n                get: {\n                    headers: {\n                        'X-Mashape-Key': 'Qu9grxVNWpmshA4Kl9pTwyiJxVGUp1lKzrZjsnghQMkFkfA4LB'\n                    },\n                },\n            });\n\n            this.Dish = $resource('https://spoonacular-recipe-food-nutrition-v1.p.mashape.com/recipes/:id/information',{},{\n                get: {\n                    headers: {\n                        'X-Mashape-Key': 'Qu9grxVNWpmshA4Kl9pTwyiJxVGUp1lKzrZjsnghQMkFkfA4LB'\n                    },\n                    transformResponse: function(resp, headersGetter, status) {\n                      let total = 0;\n                      const data = JSON.parse(resp);\n                      const ingredients = data.extendedIngredients.map(function (ingredient) {\n                        const cost = ingredient.amount * YOLO;\n                        total = total + cost;\n                        return Object.assign(ingredient, {cost})\n                      })\n                      return Object.assign(data, {\n                        type: getType(data.dishTypes),\n                        extendedIngredients: {\n                          total,\n                          ingredients,\n                        },\n                      });\n                    },\n                },\n            });\n\n            this.addToMenu = function(dish) {\n                menu[dish.type] = dish;\n            }\n\n            this.deleteFromMenu = function(dish) {\n                delete menu[dish.type];\n            }\n\n            this.getMenu = function() {\n                return menu;\n            }\n\n            return this;\n        }\n})();\n"]}